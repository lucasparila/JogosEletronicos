/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-05-23 00:06:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.jogoseletronicos.model.Jogo;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("com.jogoseletronicos.model.Jogo");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    ArrayList<Jogo> catalogo = (ArrayList<Jogo>) application.getAttribute("catalogoGeral");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Home</title>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/css/index.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "view/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container mt-4\">\r\n");
      out.write("\r\n");
      out.write("    <h2 class=\"mb-3\">Destaques</h2>\r\n");
      out.write("\r\n");
      out.write("    <!-- Carrossel -->\r\n");
      out.write("    <div id=\"carrosselJogos\" class=\"carousel slide mb-5\" data-bs-ride=\"carousel\">\r\n");
      out.write("        <div class=\"carousel-inner\">\r\n");
      out.write("            ");

                for (int i = 0; i < Math.min(3, catalogo.size()); i++) {
                    Jogo jogo = catalogo.get(i);
            
      out.write("\r\n");
      out.write("                <div class=\"carousel-item ");
      out.print( (i == 0 ? "active" : "") );
      out.write("\">\r\n");
      out.write("                    <img src=\"");
      out.print( jogo.getImagemJogo() );
      out.write("\" class=\"d-block w-50\" alt=\"");
      out.print( jogo.getTitulo() );
      out.write("\">\r\n");
      out.write("                    <div class=\"carousel-caption d-none d-md-block bg-dark bg-opacity-50 rounded\">\r\n");
      out.write("                        <h5>");
      out.print( jogo.getTitulo() );
      out.write("</h5>\r\n");
      out.write("                        <p>");
      out.print( jogo.getSinopse() );
      out.write("</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            ");

                }
            
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carrosselJogos\" data-bs-slide=\"prev\">\r\n");
      out.write("            <span class=\"carousel-control-prev-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("        <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carrosselJogos\" data-bs-slide=\"next\">\r\n");
      out.write("            <span class=\"carousel-control-next-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Lançamentos -->\r\n");
      out.write("    <h3>Lançamentos</h3>\r\n");
      out.write("    <div class=\"row row-cols-1 row-cols-md-3 g-4 mb-5\">\r\n");
      out.write("        ");

            for (int i = 3; i < Math.min(6, catalogo.size()); i++) {
                Jogo jogo = catalogo.get(i);
        
      out.write("\r\n");
      out.write("            <div class=\"col\">\r\n");
      out.write("                <div class=\"card h-100\">\r\n");
      out.write("                    <img src=\"");
      out.print( jogo.getImagemJogo() );
      out.write("\" class=\"d-block w-100\" alt=\"");
      out.print( jogo.getTitulo() );
      out.write("\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                        <h5 class=\"card-title\">");
      out.print( jogo.getTitulo() );
      out.write("</h5>\r\n");
      out.write("                        <p class=\"card-text\">");
      out.print( jogo.getSinopse() );
      out.write("</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        ");

            }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Promoções -->\r\n");
      out.write("    <h3>Promoções</h3>\r\n");
      out.write("    <div class=\"row row-cols-1 row-cols-md-3 g-4 m-5\">\r\n");
      out.write("        ");

            for (int i = 6; i < Math.min(9, catalogo.size()); i++) {
                Jogo jogo = catalogo.get(i);
        
      out.write("\r\n");
      out.write("            <div class=\"col\">\r\n");
      out.write("                <div class=\"card h-100\">\r\n");
      out.write("                   <img src=\"");
      out.print( jogo.getImagemJogo() );
      out.write("\" class=\"d-block w-100\" alt=\"");
      out.print( jogo.getTitulo() );
      out.write("\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                        <h5 class=\"card-title text-danger\">");
      out.print( jogo.getTitulo() );
      out.write("</h5>\r\n");
      out.write("                        <p class=\"card-text\">");
      out.print( jogo.getSinopse() );
      out.write("</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        ");

            }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
